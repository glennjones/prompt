{
    "cells": [
        {
            "language": "markdown",
            "source": [
                "# Prompt - Name entity recognition (NER) - UX Job titles"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### Add Prompt module and get API key from .env file"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "const Prompt = require('../index.js')\nconst {Prompter, OpenAI} = Prompt;\n\nconst DotEnv = require('dotenv');\nDotEnv.config({path: '../.env'});\nconst apiKey = process.env.OPENAI_API_KEY;"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### Load the model for OpenAI"
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let model = new OpenAI(apiKey);\nlet nlpPrompter = new Prompter(model);"
            ],
            "outputs": []
        },
        {
            "language": "markdown",
            "source": [
                "### Call the prompt module \n* The `domain` property helps fucus the language model.\n* The `textInput` property is the text to be parsed."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let result = await nlpPrompter.fit('ner.njk', {\n    domain: 'ux recruitment',\n    textInput: 'Senior UX Researcher, part-time 6 month contract, Edinburgh - Hybrid',\n  });\nconsole.log(result);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "{",
                                "  text: [",
                                "    {",
                                "      label: 'Position',",
                                "      text: 'Senior UX Researcher',",
                                "      start: 0,",
                                "      end: 18",
                                "    },",
                                "    { label: 'Contract Type', text: 'part-time', start: 20, end: 29 },",
                                "    { label: 'Duration', text: '6 month', start: 31, end: 38 },",
                                "    { label: 'Location', text: 'Edinburgh', start: 40, end: 48 },",
                                "    { label: 'Mode', text: 'Hybrid', start: 50, end: 56 },",
                                "    { branch: 'UX Recruitment', group: 'Job Posting' }",
                                "  ],",
                                "  prompt_tokens: 164,",
                                "  completion_tokens: 146,",
                                "  total_tokens: 310",
                                "}",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "### With labels\n* The `domain` property helps fucus the language model.\n* The `textInput` property is the text to be parsed.\n* The `labels` array is a list entities that the model should extract. "
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let result = await nlpPrompter.fit('ner.njk', {\n    domain: 'ux recruitment',\n    labels: [\"JOBTITLE\", \"EMPLOYMENT_TYPE\", \"DURATION\", \"LOCATION\", \"REMOTE_OPTION\", \"SENORITY\"],\n    textInput: 'Senior UX Researcher, part-time 6 month contract, Edinburgh - Hybrid'\n  });\nconsole.log(result);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "{",
                                "  text: [",
                                "    {",
                                "      label: 'JOBTITLE',",
                                "      text: 'Senior UX Researcher',",
                                "      start: 0,",
                                "      end: 18",
                                "    },",
                                "    { label: 'EMPLOYMENT_TYPE', text: 'part-time', start: 19, end: 28 },",
                                "    { label: 'DURATION', text: '6 month', start: 29, end: 37 },",
                                "    { label: 'LOCATION', text: 'Edinburgh', start: 38, end: 47 },",
                                "    { label: 'REMOTE_OPTION', text: 'Hybrid', start: 48, end: 55 },",
                                "    { branch: 'UX Recruitment', group: 'Seniority' }",
                                "  ],",
                                "  prompt_tokens: 193,",
                                "  completion_tokens: 159,",
                                "  total_tokens: 352",
                                "}",
                                ""
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "language": "markdown",
            "source": [
                "### With inline fine tuning (One shot)\n* The `domain` property helps fucus the language model.\n* The `textInput` property is the text to be parsed.\n* The `labels` array is a list entities that the model should extract. \n* The `examples` array take an array of arrays. Each of which has two properties. The example input text and the labels data you would expect to be returned. You nay add muiltple examples, but remember there is a limit to how big the prompt can be, which is set by the model you are using."
            ],
            "outputs": []
        },
        {
            "language": "javascript",
            "source": [
                "let text = \"Senior UX/UI Designer, Edinburgh or fully Remote\"\nlet labels = [\n  { label: 'SENORITY', text: 'Senior', start: 0, end: 5 },\n  { label: 'JOBTITLE', text: 'Senior UX/UI Designer', start: 0, end: 19 },\n  { label: 'EMPLOYMENT_TYPE', text: 'Edinburgh', start: 22, end: 31 },\n  { label: 'REMOTE_OPTION', text: 'fully Remote', start: 33, end: 44 },\n  { branch: 'UX', group: 'Design' }\n]\nlet fineTune = [\n  [text, labels]\n]\n\nlet result = await nlpPrompter.fit('ner.njk', {\n    domain: 'ux recruitment',\n    labels: [\"JOBTITLE\", \"EMPLOYMENT_TYPE\", \"DURATION\", \"LOCATION\", \"REMOTE_OPTION\"],\n    textInput: 'UX Copy Writer Team Leader, Edinburgh or Hybrid',\n    examples: fineTune\n    });\nconsole.log(result);"
            ],
            "outputs": [
                {
                    "items": [
                        {
                            "mime": "application/vnd.code.notebook.stdout",
                            "value": [
                                "{",
                                "  text: [",
                                "    { label: 'SENORITY', text: 'Team Leader', start: 17, end: 28 },",
                                "    {",
                                "      label: 'JOBTITLE',",
                                "      text: 'UX Copy Writer Team Leader',",
                                "      start: 0,",
                                "      end: 28",
                                "    },",
                                "    { label: 'EMPLOYMENT_TYPE', text: 'Edinburgh', start: 31, end: 40 },",
                                "    { label: 'REMOTE_OPTION', text: 'Hybrid', start: 42, end: 48 },",
                                "    { branch: 'UX', group: 'Copy Writing' }",
                                "  ],",
                                "  prompt_tokens: 390,",
                                "  completion_tokens: 189,",
                                "  total_tokens: 579",
                                "}",
                                ""
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}